source('~/work/qtlviewer/qtlapi/src/qtlapi.R')
system.time({
get_correlation('islet.rnaseq','ENSMUSG00000020681')
})
get_correlation('islet.rnaseq','ENSMUSG00000020681', 'dataset.exvivo', intcovar = 'sex')
system.time({
get_correlation('islet.rnaseq','ENSMUSG00000020681', 'dataset.exvivo', intcovar = 'sex')
})
help(qr)
load("~/work/qtlviewer/data/AttieIsletSecretion/AttieIsletSecretion_v10.RData")
samples <- intersect(rownames(dataset.exvivo$data), rownames(dataset.islet.rnaseq$data$rz))
corValues <- cor(dataset.exvivo$data[samples, 'G33_ins_secrete_gm'],
dataset.islet.rnaseq$data$rz[samples, ], use = "pair")
corValues <- corValues[1, order(abs(corValues), decreasing = TRUE)]
head(corValues)
plotData <- tibble(x = dataset.exvivo$data[samples, 'G33_ins_secrete_gm'],
y = dataset.islet.rnaseq$data$rz[samples, 'ENSMUSG00000026628'])
head(plotData)
# simple look at the data
ggplot(plotData, aes(x=x, y=y)) + geom_point()
grab_residual_mat <- function(variable_mat,
adjust_mat,
varOfInterest,
adjOfInterest,
use_qr = TRUE) {
samples <- intersect(rownames(variable_mat), rownames(adjust_mat))
full_dat <- cbind(variable_mat[samples,], adjust_mat[samples,]) %>% as.data.frame()
if(use_qr) {
#browser()
# Fast, but can't handle NAs in y
X.0 <- model.matrix(formula(paste("~ + 1 +", paste(adjOfInterest, collapse = " + "))), data = full_dat)
qr.0 <- qr(X.0[samples,])
resid_mat <- sapply(1:length(varOfInterest), function(i) {
d <- full_dat[samples, varOfInterest[i]]
# remove NA's
qr.0$qr <- qr.0$qr[!is.na(d), , drop = FALSE]
s <- samples[!is.na(d)]
d <- d[!is.na(d)]
# construct a matrix with and set the names
matrix_residulas <- matrix(qr.resid(qr.0, d))
rownames(matrix_residulas) <- s
# construct a matrix to pass back, so it's always the same
# sample size
ret <- matrix(NA, nrow = length(samples))
rownames(ret) <- samples
# set the data
ret[rownames(ret) %in% rownames(matrix_residulas), ] <-
matrix_residulas[rownames(matrix_residulas) %in% rownames(ret), ]
return(ret)
}, simplify = TRUE)
rownames(resid_mat) <- samples
}
else{
## Way too slow, use QR trick
resid_mat <- sapply(1:length(varOfInterest), function(i) {
fit_formula <- paste(varOfInterest[i], "~", paste(adjOfInterest, collapse = " + "))
fit <- lm(formula(fit_formula), data = full_dat)
return(fit$residuals[samples])
}, simplify = TRUE)
}
colnames(resid_mat) <- varOfInterest
resid_mat
}
G33_ins_secrete_gm_resid <- grab_residual_mat(variable_mat = dataset.exvivo$data,
adjust_mat = dataset.exvivo$covar.matrix,
varOfInterest = c("G33_ins_secrete_gm"),
adjOfInterest = "sexM")
rna_resid <- grab_residual_mat(variable_mat = dataset.islet.rnaseq$data$rz,
adjust_mat = dataset.exvivo$covar.matrix,
varOfInterest = colnames(dataset.islet.rnaseq$data$rz),
adjOfInterest = "sexM")
View(rna_resid)
corValuesAjd <- cor(G33_ins_secrete_gm_resid[samples,],
rna_resid[samples,],
use = "pair")
corValuesAjd <- corValuesAjd[1, order(abs(corValuesAjd), decreasing = TRUE)]
head(corValuesAjd)
plotData <- tibble(x = G33_ins_secrete_gm_resid[samples,],
y = rna_resid[samples, "ENSMUSG00000026628"])
head(plotData)
ggplot(plotData, aes(x=x, y=y)) + geom_point()
G33_ins_secrete_gm_resid <- grab_residual_mat(variable_mat = dataset.islet.rnaseq$data$rz,
adjust_mat = dataset.islet.rnaseq$covar.matrix,
varOfInterest = c("ENSMUSG00000020681"),
adjOfInterest = "sexM")
ENSMUSG00000020681_resid <- grab_residual_mat(variable_mat = dataset.islet.rnaseq$data$rz,
adjust_mat = dataset.islet.rnaseq$covar.matrix,
varOfInterest = c("ENSMUSG00000020681"),
adjOfInterest = "sexM")
rna_resid <- grab_residual_mat(variable_mat = dataset.islet.rnaseq$data$rz,
adjust_mat = dataset.islet.rnaseq$covar.matrix,
varOfInterest = colnames(dataset.islet.rnaseq$data$rz),
adjOfInterest = "sexM")
system.time({
rna_resid <- grab_residual_mat(variable_mat = dataset.islet.rnaseq$data$rz,
adjust_mat = dataset.islet.rnaseq$covar.matrix,
varOfInterest = colnames(dataset.islet.rnaseq$data$rz),
adjOfInterest = "sexM")
})
system.time({
hmmmm <- get_correlation('islet.rnaseq','ENSMUSG00000020681', 'dataset.invivo', 'sex')
})
debug_mode <- T
system.time({
hmmmm <- get_correlation('islet.rnaseq','ENSMUSG00000020681', 'dataset.invivo', 'sex')
})
source('~/work/qtlviewer/qtlapi/src/restapi.R')
source('~/work/qtlviewer/qtlapi/src/qtlapi.R')
system.time({
hmmmm <- get_correlation('islet.rnaseq','ENSMUSG00000020681', 'dataset.invivo', 'sex')
})
system.time({
hmmmm <- get_correlation('islet.rnaseq','ENSMUSG00000020681', intcovar='sex')
})
full_dat <- full_join(dataset.exvivo$data %>%
as.data.frame %>%
rownames_to_column("mouse.id"),
dataset.exvivo$covar.matrix %>%
as.data.frame %>%
rownames_to_column("mouse.id"))
X.0 <- model.matrix(G33_ins_secrete_gm ~ + 1 + sexM, data = full_dat)
qr.0 <- qr(X.0)
y <- full_dat[which(!is.na(full_dat$sexM)), "G33_ins_secrete_gm"]
qr.resid(qr.0, y)
qr.0.na <-qr.0
qr.0.na$qr <-qr.0$qr[-1,]
resid1 <- qr.resid(qr.0.na, y[-1])
qr.0.na.alt <- qr(X.0[-1,])
qr.resid(qr.0.na.alt, y[-1])
resid2 <- qr.resid(qr.0.na.alt, y[-1])
plot(resid1, resid2)
ENSMUSG00000020681_resid <- grab_residual_mat(variable_mat = dataset.islet.rnaseq$data$rz,
adjust_mat = dataset.islet.rnaseq$covar.matrix,
varOfInterest = c("ENSMUSG00000020681"),
adjOfInterest = "sexM",
use_qr = FALSE)
rna_resid <- grab_residual_mat(variable_mat = dataset.islet.rnaseq$data$rz,
adjust_mat = dataset.islet.rnaseq$covar.matrix,
varOfInterest = colnames(dataset.islet.rnaseq$data$rz),
adjOfInterest = "sexM",
use_qr = FALSE)
rna_resid <- grab_residual_mat(variable_mat = dataset.islet.rnaseq$data$rz,
adjust_mat = dataset.islet.rnaseq$covar.matrix,
varOfInterest = colnames(dataset.islet.rnaseq$data$rz),
adjOfInterest = "sexM",
use_qr = TRUE)
source('~/work/qtlviewer/qtlapi/src/qtlapi.R')
rna_resid <- grab_residual_mat(variable_mat = dataset.islet.rnaseq$data$rz,
adjust_mat = dataset.islet.rnaseq$covar.matrix,
varOfInterest = colnames(dataset.islet.rnaseq$data$rz),
adjOfInterest = "sexM",
use_qr = TRUE)
rna_resid <- grab_residual_mat(variable_mat = dataset.islet.rnaseq$data$rz,
adjust_mat = dataset.islet.rnaseq$covar.matrix,
varOfInterest = colnames(dataset.islet.rnaseq$data$rz)[1:10,],
adjOfInterest = "sexM",
use_qr = FALSE)
rna_resid <- grab_residual_mat(variable_mat = dataset.islet.rnaseq$data$rz,
adjust_mat = dataset.islet.rnaseq$covar.matrix,
varOfInterest = colnames(dataset.islet.rnaseq$data$rz)[,1:10],
adjOfInterest = "sexM",
use_qr = FALSE)
colnames(dataset.islet.rnaseq$data$rz)[1:10,]
colnames(dataset.islet.rnaseq$data$rz)[1:10]
rna_resid <- grab_residual_mat(variable_mat = dataset.islet.rnaseq$data$rz,
adjust_mat = dataset.islet.rnaseq$covar.matrix,
varOfInterest = colnames(dataset.islet.rnaseq$data$rz)[1:10],
adjOfInterest = "sexM",
use_qr = FALSE)
system.time({
rna_resid <- grab_residual_mat(variable_mat = dataset.islet.rnaseq$data$rz,
adjust_mat = dataset.islet.rnaseq$covar.matrix,
varOfInterest = colnames(dataset.islet.rnaseq$data$rz)[1:10],
adjOfInterest = "sexM",
use_qr = FALSE)
})
system.time({
rna_resid <- grab_residual_mat(variable_mat = dataset.islet.rnaseq$data$rz,
adjust_mat = dataset.islet.rnaseq$covar.matrix,
varOfInterest = colnames(dataset.islet.rnaseq$data$rz)[1:1000],
adjOfInterest = "sexM",
use_qr = FALSE)
})
source('~/work/qtlviewer/qtlapi/src/qtlapi.R')
system.time({
rna_resid2 <- grab_residual_mat(variable_mat = dataset.islet.rnaseq$data$rz,
adjust_mat = dataset.islet.rnaseq$covar.matrix,
varOfInterest = colnames(dataset.islet.rnaseq$data$rz)[1:1000],
adjOfInterest = "sexM",
use_qr = FALSE)
})
source('~/work/qtlviewer/qtlapi/src/qtlapi.R')
system.time({
rna_resid <- grab_residual_mat(variable_mat = dataset.islet.rnaseq$data$rz,
adjust_mat = dataset.islet.rnaseq$covar.matrix,
varOfInterest = colnames(dataset.islet.rnaseq$data$rz),
adjOfInterest = "sexM",
use_qr = TRUE)
})
source('~/work/qtlviewer/qtlapi/src/qtlapi.R')
View(dataset.exvivo$data)
full_dat <- full_join(dataset.exvivo$data %>%
as.data.frame %>%
rownames_to_column("mouse.id"),
dataset.exvivo$covar.matrix %>%
as.data.frame %>%
rownames_to_column("mouse.id"))
X.0 <- model.matrix(G33_ins_secrete_gm ~ + 1 + sexM, data = full_dat)
qr.0 <- qr(X.0)
y <- full_dat[which(!is.na(full_dat$sexM)), "G33_ins_secrete_gm"]
qr.resid(qr.0, y)
qr.0.na <-qr.0
qr.0.na$qr <-qr.0$qr[-1,]
resid1 <- qr.resid(qr.0.na, y[-1])
qr.0.na.alt <- qr(X.0[-1,])
qr.resid(qr.0.na.alt, y[-1])
resid2 <- qr.resid(qr.0.na.alt, y[-1])
head(full_dat)
full_data
full.data
full_dat
View(X.0)
View(qr.0)
View(qr.0.na)
View(qr.0)
View(qr.0.na)
View(qr.0)
View(qr.0.na)
View(qr.0)
View(full_dat)
y
qr.resid(qr.0, y)
a<-qr.resid(qr.0, y)
load("~/work/qtlviewer/data/AttieIsletSecretion/AttieIsletSecretion_v10.RData")
debug_mode <- T
source('~/work/qtlviewer/qtlapi/src/qtlapi.R')
system.time({
cor_rnaseq_sex <- get_correlation('islet.rnaseq','ENSMUSG00000020681', intcovar='sex')
})
source('~/work/qtlviewer/qtlapi/src/qtlapi.R')
system.time({
cor_rnaseq_sex <- get_correlation('islet.rnaseq','ENSMUSG00000020681', intcovar='sex')
})
system.time({
cor_rnaseq_sex_noqr <- get_correlation('islet.rnaseq','ENSMUSG00000020681', intcovar='sex', use_qr = FALSE)
})
diff(cor_rnaseq_sex, cor_rnaseq_sex_noqr)
cor_rnaseq_sex = cor_rnaseq_sex_noqr
system.time({
cor_rnaseq_sex <- get_correlation('islet.rnaseq','ENSMUSG00000020681', intcovar='sex')
})
cor_rnaseq_sex == cor_rnaseq_sex_noqr
all(cor_rnaseq_sex == cor_rnaseq_sex_noqr)
system.time({
cor_rnaseq_sex_noqr <- get_correlation('islet.rnaseq','ENSMUSG00000020681', intcovar='sex', use_qr = FALSE)
})
all(cor_rnaseq_sex == cor_rnaseq_sex_noqr)
grab_residual_mat <- function(variable_mat,
adjust_mat,
varOfInterest,
adjOfInterest,
use_qr = TRUE) {
samples <- intersect(rownames(variable_mat), rownames(adjust_mat))
full_dat <- cbind(variable_mat[samples,], adjust_mat[samples,]) %>% as.data.frame()
if(use_qr) {
#browser()
# Fast, but can't handle NAs in y
X.0 <- model.matrix(formula(paste("~ + 1 +", paste(adjOfInterest, collapse = " + "))), data = full_dat)
qr.0 <- qr(X.0[samples,])
resid_mat <- sapply(1:length(varOfInterest), function(i) {
d <- full_dat[samples, varOfInterest[i]]
# remove NA's
qr.0$qr <- qr.0$qr[!is.na(d), , drop = FALSE]
s <- samples[!is.na(d)]
d <- d[!is.na(d)]
# construct a matrix with and set the names
matrix_residulas <- matrix(qr.resid(qr.0, d))
rownames(matrix_residulas) <- s
# construct a matrix to pass back, so it's always the same
# sample size
ret <- matrix(NA, nrow = length(samples))
rownames(ret) <- samples
# set the data
ret[rownames(ret) %in% rownames(matrix_residulas), ] <-
matrix_residulas[rownames(matrix_residulas) %in% rownames(ret), ]
return(ret)
}, simplify = TRUE)
rownames(resid_mat) <- samples
}
else{
## Way too slow, use QR trick
resid_mat <- sapply(1:length(varOfInterest), function(i) {
fit_formula <- paste(varOfInterest[i], "~", paste(adjOfInterest, collapse = " + "))
fit <- lm(formula(fit_formula), data = full_dat)
return(fit$residuals[samples])
}, simplify = TRUE)
}
colnames(resid_mat) <- varOfInterest
resid_mat
}
## Works for multiple variables
ENSMUSG00000020681_resid <- grab_residual_mat(variable_mat = dataset.islet.rnaseq$data$rz,
adjust_mat = dataset.islet.rnaseq$covar.matrix,
varOfInterest = c("ENSMUSG00000020681"),
adjOfInterest = "sexM",
use_qr = FALSE)
rna_resid <- grab_residual_mat(variable_mat = dataset.islet.rnaseq$data$rz,
adjust_mat = dataset.islet.rnaseq$covar.matrix,
varOfInterest = colnames(dataset.islet.rnaseq$data$rz),
adjOfInterest = "sexM",
use_qr = FALSE)
corValuesQR<- cor(G33_ins_secrete_gm_resid[samples,],
rna_resid[samples,],
use = "pair")
# reorder
corValuesQR <- corValuesQR[1, order(abs(corValuesQR), decreasing = TRUE)]
# corValues is now a list of genes and correlations
head(corValuesAjd)
head(ENSMUSG00000020681_resid)
head(rna_resid)
head(rna_resid)
str(rna_resid)
str(ENSMUSG00000020681_resid)
corValuesQR_False <- cor(ENSMUSG00000020681_resid,
rna_resid,
use = "pair")
corValuesQR_False <- corValuesQR_False[1, order(abs(corValuesQR_False), decreasing = TRUE)]
head(corValuesQR_False)
ENSMUSG00000020681_resid_qr <- grab_residual_mat(variable_mat = dataset.islet.rnaseq$data$rz,
adjust_mat = dataset.islet.rnaseq$covar.matrix,
varOfInterest = c("ENSMUSG00000020681"),
adjOfInterest = "sexM",
use_qr = TRUE)
rna_resid_qr <- grab_residual_mat(variable_mat = dataset.islet.rnaseq$data$rz,
adjust_mat = dataset.islet.rnaseq$covar.matrix,
varOfInterest = colnames(dataset.islet.rnaseq$data$rz),
adjOfInterest = "sexM",
use_qr = TRUE)
corValuesQR_True <- cor(ENSMUSG00000020681_resid_qr,
rna_resid_qr,
use = "pair")
corValuesQR_True <- corValuesQR_True[1, order(abs(corValuesQR_True), decreasing = TRUE)]
all(corValuesQR_False, corValuesQR_True)
str(corValuesQR_False)
str(corValuesQR_True)
all(corValuesQR_False== corValuesQR_True)
G33_ins_secrete_gm_resid <- grab_residual_mat(variable_mat = dataset.exvivo$data,
adjust_mat = dataset.islet.rnaseq$covar.matrix,
varOfInterest = c("G33_ins_secrete_gm"),
adjOfInterest = "sexM",
use_qr = FALSE)
G33_ins_secrete_gm_resid_qr <- grab_residual_mat(variable_mat = dataset.exvivo$data,
adjust_mat = dataset.islet.rnaseq$covar.matrix,
varOfInterest = c("G33_ins_secrete_gm"),
adjOfInterest = "sexM",
use_qr = TRUE)
View(ENSMUSG00000020681_resid)
G33_ins_secrete_gm_resid == G33_ins_secrete_gm_resid_qr
head(G33_ins_secrete_gm_resid)
head(G33_ins_secrete_gm_resid_qr)
Math<-c(88,95,85,NA,76,69,78,NA,70,68)
mean(Math, na.rm = T)
median(Math, na.rm = F)
median(Math, na.rm = T)
sd(Math, na.rm = T)
G33_ins_secrete_gm_resid_qr[is.na(G33_ins_secrete_gm_resid_qr)]
G33_ins_secrete_gm_resid[is.na(G33_ins_secrete_gm_resid)]
grab_residual_mat <- function(variable_mat,
adjust_mat,
varOfInterest,
adjOfInterest,
use_qr = TRUE) {
samples <- intersect(rownames(variable_mat), rownames(adjust_mat))
full_dat <- cbind(variable_mat[samples,], adjust_mat[samples,]) %>% as.data.frame()
if(use_qr) {
#browser()
# Fast, but can't handle NAs in y
X.0 <- model.matrix(formula(paste("~ + 1 +", paste(adjOfInterest, collapse = " + "))), data = full_dat)
qr.0 <- qr(X.0[samples,])
resid_mat <- sapply(1:length(varOfInterest), function(i) {
d <- full_dat[samples, varOfInterest[i]]
return(qr.resid(qr.0, d))
# remove NA's
#qr.0$qr <- qr.0$qr[!is.na(d), , drop = FALSE]
#s <- samples[!is.na(d)]
#d <- d[!is.na(d)]
# construct a matrix with and set the names
#matrix_residulas <- matrix(qr.resid(qr.0, d))
#rownames(matrix_residulas) <- s
# construct a matrix to pass back, so it's always the same
# sample size
#ret <- matrix(NA, nrow = length(samples))
#rownames(ret) <- samples
# set the data
#ret[rownames(ret) %in% rownames(matrix_residulas), ] <-
#    matrix_residulas[rownames(matrix_residulas) %in% rownames(ret), ]
#return(ret)
}, simplify = TRUE)
rownames(resid_mat) <- samples
}
else{
## Way too slow, use QR trick
resid_mat <- sapply(1:length(varOfInterest), function(i) {
fit_formula <- paste(varOfInterest[i], "~", paste(adjOfInterest, collapse = " + "))
fit <- lm(formula(fit_formula), data = full_dat)
return(fit$residuals[samples])
}, simplify = TRUE)
}
colnames(resid_mat) <- varOfInterest
resid_mat
}
## Works for multiple variables
ENSMUSG00000020681_resid <- grab_residual_mat(variable_mat = dataset.islet.rnaseq$data$rz,
adjust_mat = dataset.islet.rnaseq$covar.matrix,
varOfInterest = c("ENSMUSG00000020681"),
adjOfInterest = "sexM",
use_qr = FALSE)
rna_resid <- grab_residual_mat(variable_mat = dataset.islet.rnaseq$data$rz,
adjust_mat = dataset.islet.rnaseq$covar.matrix,
varOfInterest = colnames(dataset.islet.rnaseq$data$rz),
adjOfInterest = "sexM",
use_qr = FALSE)
corValuesQR_False <- cor(ENSMUSG00000020681_resid,
rna_resid,
use = "pair")
# reorder
corValuesQR_False <- corValuesQR_False[1, order(abs(corValuesQR_False), decreasing = TRUE)]
# corValues is now a list of genes and correlations
head(corValuesQR_False)
#######
ENSMUSG00000020681_resid_qr <- grab_residual_mat(variable_mat = dataset.islet.rnaseq$data$rz,
adjust_mat = dataset.islet.rnaseq$covar.matrix,
varOfInterest = c("ENSMUSG00000020681"),
adjOfInterest = "sexM",
use_qr = TRUE)
rna_resid_qr <- grab_residual_mat(variable_mat = dataset.islet.rnaseq$data$rz,
adjust_mat = dataset.islet.rnaseq$covar.matrix,
varOfInterest = colnames(dataset.islet.rnaseq$data$rz),
adjOfInterest = "sexM",
use_qr = TRUE)
corValuesQR_True <- cor(ENSMUSG00000020681_resid_qr,
rna_resid_qr,
use = "pair")
# reorder
corValuesQR_True <- corValuesQR_True[1, order(abs(corValuesQR_True), decreasing = TRUE)]
# corValues is now a list of genes and correlations
all(corValuesQR_False == corValuesQR_True)
G33_ins_secrete_gm_resid <- grab_residual_mat(variable_mat = dataset.exvivo$data,
adjust_mat = dataset.islet.rnaseq$covar.matrix,
varOfInterest = c("G33_ins_secrete_gm"),
adjOfInterest = "sexM",
use_qr = FALSE)
G33_ins_secrete_gm_resid_qr <- grab_residual_mat(variable_mat = dataset.exvivo$data,
adjust_mat = dataset.islet.rnaseq$covar.matrix,
varOfInterest = c("G33_ins_secrete_gm"),
adjOfInterest = "sexM",
use_qr = TRUE)
source('~/work/qtlviewer/qtlapi/src/test.R')
G33_ins_secrete_gm_resid_qr <- grab_residual_mat(variable_mat = dataset.exvivo$data,
adjust_mat = dataset.islet.rnaseq$covar.matrix,
varOfInterest = c("G33_ins_secrete_gm"),
adjOfInterest = "sexM",
use_qr = TRUE)
pcor(d)
cor(d)
cor(d)
head(d)
d[is.na(d)]
cor(d)
str(d)
cor(full_dat)
cor(full_dat, use = "complete.obs")
a<-cor(full_dat, use = "complete.obs")
View(a)
View(dataset.exvivo$annot.phenotype)
G33_ins_secrete_gm_resid_qr <- grab_residual_mat(variable_mat = dataset.exvivo$data,
adjust_mat = dataset.islet.rnaseq$covar.matrix,
varOfInterest = c("G33_ins_secrete_gm"),
adjOfInterest = "sexM",
use_qr = TRUE)
str(full_dat)
full_dat[samples, ]
full_dat[DO029, ]
full_dat['DO029', ]
cor(full_dat, use = "complete.obs")
cor(full_dat, use = "complete.obs")['G33_ins_secrete_gm', ]
sort(cor(full_dat, use = "complete.obs")['G33_ins_secrete_gm', ])
full_dat
sort(cor(full_dat, use = "complete.obs")['G33_ins_secrete_gm', ])
full_dat[, 'G83_ins_secrete_gm_adj_G33 ']
full_dat[, 'G83_ins_secrete_gm_adj_G33']
get_correlation_plot_data(dataset='dataset.cecum.lipids', id='X_16.0__18.1_C34H65O4_5.229_537.48944_minus', dataset_correlate='dataset.cecum.lipids', id_correlate='FA_17.0_1_5.969_269.24863_minus', intcovar='sex')
load("~/work/qtlviewer/data/AttieALL/attie_all_qtl_viewer_v5.RData")
debug_mode <- FALSE
source('~/work/qtlviewer/qtlapi/src/qtlapi.R')
debug_mode <- T
source('~/work/qtlviewer/qtlapi/src/qtlapi.R')
get_correlation_plot_data(dataset='dataset.cecum.lipids', id='X_16.0__18.1_C34H65O4_5.229_537.48944_minus', dataset_correlate='dataset.cecum.lipids', id_correlate='FA_17.0_1_5.969_269.24863_minus', intcovar='sex')
debugSource('~/work/qtlviewer/qtlapi/src/qtlapi.R')
get_correlation_plot_data(dataset='dataset.cecum.lipids', id='X_16.0__18.1_C34H65O4_5.229_537.48944_minus', dataset_correlate='dataset.cecum.lipids', id_correlate='FA_17.0_1_5.969_269.24863_minus', intcovar='sex')
library(missMDA)
install.packages('missMDA')
debugSource('~/work/qtlviewer/qtlapi/src/qtlapi.R')
G33_ins_secrete_gm_resid_qr <- grab_residual_mat(variable_mat = dataset.exvivo$data,
adjust_mat = dataset.islet.rnaseq$covar.matrix,
varOfInterest = c("G33_ins_secrete_gm"),
adjOfInterest = "sexM",
use_qr = TRUE)
get_correlation('exvivo','G33_ins_secrete_gm', 'dataset.invivo')
get_correlation('exvivo','G33_ins_secrete_gm', intcovar='sex')
get_correlation('islet.rnaseq','ENSMUSG00000020681', intcovar = 'sex')
View(get_data)
